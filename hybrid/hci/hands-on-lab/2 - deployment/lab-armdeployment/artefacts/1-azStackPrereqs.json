{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apiVersion": {
            "defaultValue": "2024-04-01",
            "type": "string",
            "metadata": {
                "description": "The api version for deploying a hci cluster"
            }
        },
        "principalId": {
            "type": "string",
            "metadata": {
                "description": "PrincipalID of the User that will be installing AzStack HCI"
            }
        },
        "clustername": {
            "type": "string",
            "defaultValue": "myhcixxclus",
            "metadata": {
                "description": "name of the AzStack HCI cluster to derive the storage account name from"
            }
        },
        "localAdminUserName": {
            "type": "string",
            "defaultValue": "asLocalAdmin",
            "minLength": 1,
            "metadata": {
                "description": "Local administrator username (non-domain account)"
            }
        },
        "localAdminPassword": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "local administrator password"
            }
        },
        "AzureStackLCMAdminUsername": {
            "type": "string",
            "defaultValue": "asLCMUser",
            "minLength": 1,
            "metadata": {
                "description": "HCI Deployment user username (domain account)"
            }
        },
        "AzureStackLCMAdminPasssword": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "HCI Deployment user password"
            }
        },
        "arbDeploymentAppID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "ARB SPN's AppID"
            }
        },
        "arbDeploymentAppSecret": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "ARB SPN's Password"
            }
        },
        "hciResourceProviderObjectID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Object ID of HCI Resource Provider"
            }
        },
        "logsRetentionInDays": {
            "type": "int",
            "defaultValue": 30,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "Specifies the number of days that logs are gonna be kept. If you do not want to apply any retention policy and retain data forever, set value to 0."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "tags": {
            "type": "object",
            "defaultValue": {
                "owner": "bfrank",
                "environment": "PoC"
            },
            "metadata": {
                "description": "tags to be assigned to all resources"
            }
        }
    },
    "variables": {
        "storageWitnessNameVar": "WitnessStorageKey",
        "LocalAdminCredentialSecretName": "LocalAdminCredential",
        "domainAdminSecretName": "AzureStackLCMUserCredential",
        "arbDeploymentSpnSecretName": "DefaultARBApplication",
        "localAdminSecretValue": "[base64(concat(parameters('localAdminUserName'),':',parameters('localAdminPassword')))]",
        "domainAdminSecretValueVar": "[base64(concat(parameters('AzureStackLCMAdminUsername'),':',parameters('AzureStackLCMAdminPasssword')))]",
        "arbDeploymentSpnValueVar": "[base64(concat(parameters('arbDeploymentAppID'),':',parameters('arbDeploymentAppSecret')))]",
        "clusterWitnessStorageAccountName": "[toLower(concat('sa',parameters('clustername'),substring(uniqueString(resourceGroup().id),0,sub(18,length(parameters('clustername'))))))]",
        "diagnosticStorageAccountName": "[toLower(concat('sadiag',parameters('clustername'),substring(uniqueString(resourceGroup().id),0,sub(14,length(parameters('clustername'))))))]",
        "keyVaultName": "[toLower(concat('kv',parameters('clustername'),substring(uniqueString(resourceGroup().id),0,sub(14,length(parameters('clustername'))))))]",
        "ReaderRole": "[guid(parameters('principalId'), 'acdd72a7-3385-48ef-bd42-f606fba81ae7', resourceGroup().id)]",
        "AzureStackHCIAdministratorRole": "[guid(parameters('principalId'), 'bda0d508-adf1-4af0-9c28-88919fc3ae06', resourceGroup().id)]",
        "KeyVaultDataAccessAdministratorRole": "[guid(parameters('principalId'), '8b54135c-b56d-4d72-a534-26097cfdc8d8', resourceGroup().id)]",
        "KeyVaultSecretsOfficerRole": "[guid(parameters('principalId'), 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7', resourceGroup().id)]",
        "KeyVaultContributorRole": "[guid(parameters('principalId'), 'f25e0fa2-a7c8-4377-a976-54943a77a395', resourceGroup().id)]",
        "StorageAccountContributorRole": "[guid(parameters('principalId'), '17d1049b-9a84-46fb-8f53-869881c3d3ab', resourceGroup().id)]",
        "AzureConnectedMachineResourceManagerRole": "[guid(parameters('hciResourceProviderObjectID'), 'f5819b54-e033-4d82-ac66-4fec3cbf3f4c', resourceGroup().id)]"
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('ReaderRole')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                "principalId": "[parameters('principalId')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('AzureStackHCIAdministratorRole')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'bda0d508-adf1-4af0-9c28-88919fc3ae06')]",
                "principalId": "[parameters('principalId')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('KeyVaultDataAccessAdministratorRole')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8b54135c-b56d-4d72-a534-26097cfdc8d8')]",
                "principalId": "[parameters('principalId')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('KeyVaultSecretsOfficerRole')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
                "principalId": "[parameters('principalId')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('KeyVaultContributorRole')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'f25e0fa2-a7c8-4377-a976-54943a77a395')]",
                "principalId": "[parameters('principalId')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('StorageAccountContributorRole')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
                "principalId": "[parameters('principalId')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('AzureConnectedMachineResourceManagerRole')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'f5819b54-e033-4d82-ac66-4fec3cbf3f4c')]",
                "principalId": "[parameters('hciResourceProviderObjectID')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[variables('clusterWitnessStorageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "tags": "[parameters('tags')]",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[variables('diagnosticStorageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicNetworkAccess": "Disabled",
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                    "defaultAction": "Deny"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-06-01-preview",
            "name": "[variables('keyVaultName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('clusterWitnessStorageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "publicNetworkAccess": "Enabled",
                "accessPolicies": [],
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                }
            }
        },
        {
            "type": "Microsoft.AzureStackHCI/clusters",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "[parameters('clusterName')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "tags": "[parameters('tags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.KeyVault/vaults/providers/diagnosticsettings",
            "name": "[concat(variables('keyVaultName'), '/Microsoft.Insights/service')]",
            "apiVersion": "2016-09-01",
            "Location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]"
            ],
            "properties": {
                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName'))]",
                "logs": [
                    {
                        "category": "AuditEvent",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('LogsRetentionInDays')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-06-01-preview",
            "name": "[concat(variables('keyVaultName'), '/', variables('domainAdminSecretName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "contentType": "Secret",
                "value": "[variables('domainAdminSecretValueVar')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-06-01-preview",
            "name": "[concat(variables('keyVaultName'), '/', variables('LocalAdminCredentialSecretName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "contentType": "Secret",
                "value": "[variables('localAdminSecretValue')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-06-01-preview",
            "name": "[concat(variables('keyVaultName'), '/', variables('arbDeploymentSpnSecretName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "contentType": "Secret",
                "value": "[variables('arbDeploymentSpnValueVar')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-06-01-preview",
            "name": "[concat(variables('keyVaultName'), '/', variables('storageWitnessNameVar'))]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "contentType": "Secret",
                "value": "[base64(listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('clusterWitnessStorageAccountName')), '2019-04-01').keys[0].value)]",
                "attributes": {
                    "enabled": true
                }
            }
        }
    ],
    "outputs": {
        "clusterWitnessStorageAccountName": {
            "type": "string",
            "value": "[variables('clusterWitnessStorageAccountName')]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[variables('keyVaultName')]"
        }
    }
}